name: CI
on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:

    - name: Configure git private repo access
      env:
        GITHUB_TOKEN: ${{ secrets.PLANETSCALE_ACTIONS_BOT_TOKEN }}
      run: |
        git config --global --add url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Run go mod tidy
      run: |
        set -e
        go mod tidy
        output=$(git status -s)
        if [ -z "${output}" ]; then
         exit 0
        fi
        echo 'We wish to maintain a tidy state for go mod. Please run `go mod tidy` on your branch, commit and push again.'
        echo 'Running `go mod tidy` on this CI test yields with the following changes:'
        echo "$output"
        exit 1

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test ./...

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      # only release on tags
      if: success() && startsWith(github.ref, 'refs/tags/')
      with:
        version: v0.164.0
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.PLANETSCALE_ACTIONS_BOT_TOKEN }}

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Configure git private repo access
        env:
          GITHUB_TOKEN: ${{ secrets.PLANETSCALE_ACTIONS_BOT_TOKEN }}
        run: |
          git config --global --add url."https://${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.38.0
